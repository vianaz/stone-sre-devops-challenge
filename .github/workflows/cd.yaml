 # push-and-sign-image:
  #   runs-on: ubuntu-latest
  #   needs: [image-scan, build, lint, tests]
  #   permissions:
  #     contents: read
  #     packages: write
  #     id-token: write
  #     attestations: write
  #   env:
  #     ARTIFACT_NAME: ${{ needs.build.outputs.artifact_name }}
  #     IMAGE_NAME_WITH_TAG: ${{ needs.build.outputs.image_name_with_tag }}

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.DOCKER_REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Download artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: ${{ env.ARTIFACT_NAME }}
  #         path: /tmp

  #     - name: Load image
  #       run: |
  #         docker load --input /tmp/${{ env.ARTIFACT_NAME }}.tar

  #     - name: Push image to GitHub Container Registry
  #       id: push
  #       run: |
  #         docker push ${{ env.IMAGE_NAME_WITH_TAG }}
  #         digest=$(docker image inspect ghcr.io/vianaz/stone-sre-devops-challenge:main --format '{{index .RepoDigests 0}}' | cut -d'@' -f2)
  #         echo "digest=$digest" >> "$GITHUB_OUTPUT"

  #     - name: Attest
  #       uses: actions/attest-build-provenance@v1.4.3
  #       id: attest
  #       with:
  #         subject-name: ${{ env.DOCKER_REGISTRY }}/${{ env.IMAGE_NAME }}
  #         subject-digest: ${{ steps.push.outputs.digest }}
  #         push-to-registry: true

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [push-and-sign-image, build]
  #   environment: production
  #   permissions:
  #     id-token: write
  #     contents: read
  #     actions: read
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: digitalocean/action-doctl@v2
  #       with:
  #         token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

  #     - name: Save DigitalOcean kubeconfig
  #       run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8S_CLUSTER_ID }}

  #     - name: Install Helm chart
  #       uses: WyriHaximus/github-action-helm3@v3
  #       with:
  #         exec: |
  #           helm upgrade stone-sre-devops-challenge .devops/helm --install --set container.tag=main --set container.pullPolicy=Always --set env.DB_PASSWORD=${{ secrets.DB_PASSWORD }} --set env.DB_DATABASE=${{ secrets.DB_USER }} --set env.DB_USER=${{ secrets.DB_USER }} --set env.DB_PORT=${{ vars.DB_PORT }} --set env.DB_HOST=${{ vars.DB_HOST }} --set env.NODE_ENV="production" --set env.APP_KEY=${{ secrets.APP_KEY }} --set env.LOG_LEVEL="debug"
